<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Dates' datatype='date' name='[Distance Ridden Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#2018-01-01#'>
        <calculation class='tableau' formula='#2018-01-01#' />
        <range max='#2018-06-30#' min='#2018-01-01#' />
      </column>
    </datasource>
    <datasource caption='rides1718' inline='true' name='federated.152t973029ljsl1b2a6z104dcblu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201806-citibike-tripdata' name='textscan.17gn2uc025m8g61aamffl0ce74oc'>
            <connection class='textscan' directory='C:/Users/Tyler Locke/Documents/Gitlab/TyHomework/TableauTyHW' filename='201806-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.17gn2uc025m8g61aamffl0ce74oc' name='201806-citibike-tripdata.csv' table='[201806-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201806-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percecnt Change since 1st date' datatype='real' name='[Calculation_258675565263458304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Number of Records])) - LOOKUP(ZN(SUM([Number of Records])))) / ABS(LOOKUP(ZN(SUM([Number of Records]))))'>
          <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
            <address />
          </table-calc>
        </calculation>
      </column>
      <column caption='Distance Ridden' datatype='real' name='[Calculation_557039040934658055]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([tripduration]/3600)*7.456' />
      </column>
      <column caption='Select Date' datatype='boolean' name='[Calculation_711850278447726592]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[starttime] = [Parameters].[Distance Ridden Parameter]' />
      </column>
      <column caption='Number fo Riders per Hour' datatype='integer' name='[Calculation_736901550732390405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [starttime] : SUM([Number of Records])}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end station latitude:qk]' />
          <groupfilter function='level-members' level='[none:end station longitude:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station latitude:qk]' />
          <groupfilter function='level-members' level='[none:start station longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.369231' measure-ordering='alphabetic' measure-percentage='0.58022' parameter-percentage='0.0505495' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.152t973029ljsl1b2a6z104dcblu].[cnt:bikeid:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.152t973029ljsl1b2a6z104dcblu].[sum:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.152t973029ljsl1b2a6z104dcblu]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 6 Ave (OLD)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;32 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave - 1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cliff St &amp; Fulton St_1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 55 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bike Mechanics at Riis Room A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8D Mobile 01&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Dates' datatype='date' name='[Distance Ridden Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#2018-01-01#'>
          <calculation class='tableau' formula='#2018-01-01#' />
          <range max='#2018-06-30#' min='#2018-01-01#' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Distance bike is ridden'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average distance ridden (based on assumed speed of 7.456 mph)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column caption='Distance Ridden' datatype='real' name='[Calculation_557039040934658055]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([tripduration]/3600)*7.456' />
            </column>
            <column-instance column='[Calculation_557039040934658055]' derivation='Avg' name='[avg:Calculation_557039040934658055:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[avg:Calculation_557039040934658055:qk]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Bike Usage and Most Likely Needing Repair'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:bikeid:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.152t973029ljsl1b2a6z104dcblu].[sum:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:bikeid:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.152t973029ljsl1b2a6z104dcblu].[sum:tripduration:qk] + [federated.152t973029ljsl1b2a6z104dcblu].[cnt:bikeid:qk])</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[none:bikeid:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Birth Year Vs. Trip Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:birth year:qk]' included-values='in-range'>
            <min>1930</min>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:birth year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:tripduration:qk]' scope='rows' value='Tripduration (seconds)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[none:tripduration:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:tripduration:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[none:birth year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Bottom  10 End Stations Today '>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[end station name]' derivation='Count' name='[cnt:end station name:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='MDY' name='[md:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]'>
            <groupfilter function='member' level='[md:starttime:ok]' member='20180630' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([end station name])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([end station name]) &gt;= 5' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]</column>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Bottom 10 Start Stations Today'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[start station name]' derivation='Count' name='[cnt:start station name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='MDY' name='[md:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]'>
            <groupfilter function='member' level='[md:starttime:ok]' member='20180630' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([start station name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]</column>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='End Station Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[end station name]' derivation='Count' name='[cnt:end station name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[Exclusions (End Station Latitude,End Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:end station latitude:qk]' />
                <groupfilter function='level-members' level='[none:end station longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:end station latitude:qk]' member='45.506264191001193' />
                  <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.568905591964722' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:end station latitude:qk]' member='45.506364054011385' />
                  <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.569463491439805' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[Exclusions (End Station Latitude,End Station Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station longitude:qk]' field-type='quantitative' max='-8222557.0543139726' min='-8248658.287972616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station latitude:qk]' field-type='quantitative' max='4980855.3725799266' min='4965793.2550062593' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='true' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-green-light' />
            <format attr='geo-area-type' value='Zip Code' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' />
              <size column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' />
              <geometry column='[federated.152t973029ljsl1b2a6z104dcblu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station latitude:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Female Ridership Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[gender]' derivation='Count' name='[cnt:gender:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:qk]' pivot='key' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:gender:qk]' included-values='in-range'>
            <min>2</min>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:gender:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:gender:qk]' scope='rows' value='Female Ridership' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[cnt:gender:qk]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.152t973029ljsl1b2a6z104dcblu].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Peak Hours Summer'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column caption='Number fo Riders per Hour' datatype='integer' name='[Calculation_736901550732390405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [starttime] : SUM([Number of Records])}' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Day' name='[dy:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_736901550732390405]' derivation='Sum' name='[sum:Calculation_736901550732390405:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[dy:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[sum:Calculation_736901550732390405:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[hr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Peak Hours Winter'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[sum:Number of Records:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[hr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Percent Change Since Start of Data Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Day' name='[dy:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcdf:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-type='Field' type='PctDiff'>
                <order field='[federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok]' />
                <order field='[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]' />
                <order field='[federated.152t973029ljsl1b2a6z104dcblu].[dy:starttime:ok]' />
                <address>
                  <value>2018</value>
                  <value>1</value>
                  <value>1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[pcdf:sum:Number of Records:qk:2]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[pcdf:sum:Number of Records:qk:2]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok] / ([federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[dy:starttime:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Short Term Vs. Annual Customers '>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[usertype]' derivation='Count' name='[cnt:usertype:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[none:usertype:nk]' />
              <lod column='[federated.152t973029ljsl1b2a6z104dcblu].[none:usertype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[cnt:usertype:qk]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Start Station Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[start station name]' derivation='Count' name='[cnt:start station name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[Exclusions (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start station latitude:qk]' />
                <groupfilter function='level-members' level='[none:start station longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.506264191001193' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.568905591964722' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.506364054011385' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.569463491439805' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[Exclusions (Start Station Latitude,Start Station Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='true' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-green-light' />
            <format attr='geo-area-type' value='Zip Code' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
              <size column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station latitude:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Today Gender Participants'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[gender]' derivation='Count' name='[cnt:gender:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='MDY' name='[md:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:qk]' pivot='key' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]'>
            <groupfilter function='member' level='[md:starttime:ok]' member='20180630' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:gender:qk]' field-type='quantitative' max='3' min='-1' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.152t973029ljsl1b2a6z104dcblu].[none:gender:qk]' scope='cols' value='Gender: 0 = Unknown, 1=Male, 2 = Female' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:gender:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[cnt:gender:qk]</rows>
        <cols>[federated.152t973029ljsl1b2a6z104dcblu].[none:gender:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 End Stations Today'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[end station name]' derivation='Count' name='[cnt:end station name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stoptime]' derivation='Day' name='[dy:stoptime:ok]' pivot='key' type='ordinal' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[stoptime]' derivation='MDY' name='[md:stoptime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Month' name='[mn:stoptime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[stoptime]' derivation='Year' name='[yr:stoptime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[md:stoptime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:stoptime:ok]' member='20180626' />
              <groupfilter function='member' level='[md:stoptime:ok]' member='20180630' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([end station name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]' direction='DESC' using='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' />
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[md:stoptime:ok]</column>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:end station name:nk]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:stoptime:ok] / ([federated.152t973029ljsl1b2a6z104dcblu].[mn:stoptime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[dy:stoptime:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Start Stations Today'>
      <table>
        <view>
          <datasources>
            <datasource caption='rides1718' name='federated.152t973029ljsl1b2a6z104dcblu' />
          </datasources>
          <datasource-dependencies datasource='federated.152t973029ljsl1b2a6z104dcblu'>
            <column-instance column='[start station name]' derivation='Count' name='[cnt:start station name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Day' name='[dy:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='MDY' name='[md:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:starttime:ok]' member='20180626' />
              <groupfilter function='member' level='[md:starttime:ok]' member='20180630' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([start station name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]' direction='DESC' using='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
          <slices>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[md:starttime:ok]</column>
            <column>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
              <text column='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152t973029ljsl1b2a6z104dcblu].[none:start station name:nk]</rows>
        <cols>([federated.152t973029ljsl1b2a6z104dcblu].[yr:starttime:ok] / ([federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok] / [federated.152t973029ljsl1b2a6z104dcblu].[dy:starttime:ok]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Start and End Station Popularity'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='8' name='Start Station Locations' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='End Station Locations' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='11' is-fixed='true' type='layout-basic' w='16000' x='83200' y='1000'>
              <zone h='98000' id='12' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
                <zone h='8125' id='9' name='Start Station Locations' pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='339' h='43375' id='10' is-fixed='true' name='Start Station Locations' pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' type='size' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13250' id='14' name='End Station Locations' pane-specification-id='4' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' type='size' w='16000' x='83200' y='52500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='15' name='End Station Locations' pane-specification-id='4' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' type='color' w='16000' x='83200' y='65750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Number of Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{49E758A4-B31C-4C44-A96C-02FD03D30A70}' />
    </window>
    <window class='worksheet' name='Percent Change Since Start of Data Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.152t973029ljsl1b2a6z104dcblu].[pcdf:sum:Number of Records:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{31FBF04D-1F34-4FE4-97C6-426C0A5579B5}' />
    </window>
    <window class='worksheet' name='Short Term Vs. Annual Customers '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.152t973029ljsl1b2a6z104dcblu].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{04E8457E-6BBD-4DC8-A1D5-18C5C150C78E}' />
    </window>
    <window class='worksheet' name='Peak Hours Summer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.152t973029ljsl1b2a6z104dcblu].[dy:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{42709C18-B544-45C5-BFC1-827733FE765C}' />
    </window>
    <window class='worksheet' name='Peak Hours Winter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B7B5E503-FF97-43ED-A164-481D0C9A6F8A}' />
    </window>
    <window class='worksheet' name='Top 10 Start Stations Today'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A565BA79-EDAE-47B7-A8F0-6B53DD322616}' />
    </window>
    <window class='worksheet' name='Top 10 End Stations Today'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{43B1806C-6944-4E8D-879A-117FCFC2AEE7}' />
    </window>
    <window class='worksheet' name='Bottom 10 Start Stations Today'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4AA4003B-C97C-41F9-96C6-5FE76D85C069}' />
    </window>
    <window class='worksheet' name='Bottom  10 End Stations Today '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF9305A8-5857-4912-8771-878E9119774B}' />
    </window>
    <window class='worksheet' name='Today Gender Participants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:gender:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5261489A-842D-4863-9CCD-9DE518A3B56C}' />
    </window>
    <window class='worksheet' name='Female Ridership Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{40164F23-E839-4A7D-BC69-0ABF37F6F5C4}' />
    </window>
    <window class='worksheet' name='Birth Year Vs. Trip Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[none:tripduration:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CD90184A-371A-4B61-8CB3-CA55D57AAC16}' />
    </window>
    <window class='worksheet' name='Average Distance bike is ridden'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B5C21FE0-8194-4279-996D-E24AF931A1E9}' />
    </window>
    <window class='worksheet' name='Bike Usage and Most Likely Needing Repair'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.152t973029ljsl1b2a6z104dcblu].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1CF26114-F4E4-426C-A198-B6FB36AB9C23}' />
    </window>
    <window class='worksheet' maximized='true' name='Start Station Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:start station name:qk]' type='size' />
            <card pane-specification-id='0' type='map' />
            <card mode='slider' param='[Parameters].[Distance Ridden Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.152t973029ljsl1b2a6z104dcblu].[none:Calculation_711850278447726592:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8333C2C6-899B-4524-B5DC-7618235C2522}' />
    </window>
    <window class='worksheet' name='End Station Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.152t973029ljsl1b2a6z104dcblu].[cnt:end station name:qk]' type='color' />
            <card pane-specification-id='4' type='map' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4D0952B7-56F0-4C4B-96D7-E673F7D11216}' />
    </window>
    <window class='dashboard' name='Start and End Station Popularity'>
      <viewpoints>
        <viewpoint name='End Station Locations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Start Station Locations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0ED8A942-DAB9-429D-A5BC-34B9189FD484}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Start Station Locations' width='192'>
      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
      LrnLV1LyFij5i5jU0uq16Tc7rK2t8eLFC7a3t9nf32dra4vpdEoul2NrawvXdalWq0gpWVm5
      23v0S2x055ivQNZaOr0up/1D6pWr5YLaNPi0WsfaMRPdun5+el3/7C54rqRagmhirt1buag4
      aSZXBoAxGbfUKDLsrnsEvpzpgd3RPwQYfdGGJkUKDVIjlSIeShqnPXZz6ywvhjz7ok0uDHF2
      t9ewxEziMQ8frnF01GFnZ5necMDxcZ9KJYe18P13Z0RRzEKt/lY6BSU9KvkLinIhBI931vn6
      +Wue7KxfIbk6arRZqpWvCFjfhNPRK05Gz+885jbMTRPfyeHJgGHSufL9IG6xWfqYH9q/v7Md
      JRyqwSo5t4wSDgd7TZx8jrWVHUql0rks0dxjcxfefJm/ZKd/E9ZaesM+jcEh9ep1zYKMTeHm
      YiJr4QblprfCcwWjG7yTnpsxwZnZiOqPNNOppVSQ7K6/OzX9PP3lStuVCT6ZGLYSfT6uVREi
      wqiY1QUP60WZRJK1WaHBy5cnPH68ylffvKBerZDP+7Ta3ex7KVmoVzhrNlleXcO7RX/Cc/LU
      irs46qqvW0nJ/Y0Vnu0f89HOJlIK4iShNxzz0c7GnTcXJUNedb94pwfxJqyWWJule++UP6Ps
      L7E/+Iaz0asZX6glNQm31w1n6cGezFENVnClz7AzRQ81f/nr/4JEp7w8OmahehG3uHum+tfr
      6LdhEI046e5Rq1y9nsk042RdWXRRUmC1i9EOQmYkYqnW6NTg+4p+LybMO1gDcazxQnur2Ahk
      v3OT2ZSlLkganRRroF5xWKnL9y6ykhLcNzyME3vJSWLhfHxYwM3+6xwcnjGZJFTKeSaTFD/I
      RlOn26VW3SROMrqTJ0+W+NOX+5RKIa5/c2cJvSq14s6tRLb5MCD0faLplFzg8+P+CffWl2+9
      WWstw7jD884//eTyRqEMgqxguj9tsVK4z6PaX7FZesow7tCKDvFkyFJ+h8Z4HyUcYh1hrcFT
      Aa4KcWWWXius5HSvyyePf4Pv+TR7A846Pcr5PK9PT9hcXsZ5S4T4zwlrLcfNU5r911RLV/cU
      2liOmwmLVYf945jFasDJ/oD+cEwSJywt1tE65uSszUcPH9LqjBi/nlIq5jk+PePx43XCt0gr
      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
      V/TxpMl07mPVfKxKfm/wmurr+QT/HFprTmdnWM77O7e0FLIdooqIH2YRo3qH3oOt0fuR5ZrL
      Rcbhk/vffzLqUqmY/OpojCUltZrNYrGl22khMLiYLDh82qfdKWlPSwqKorTSHXQfLutal1lg
      8+ucXrsUVvh5/aJElS/VWnB1kaGVSbANeDLs8/Z0gtaag/0es/mG0bDF9y9POfpmyGBkYkmD
      dqXOJohIQhuvHmNVcuTJZMnR3hi3KgnXJ5zMAsbhiHGv8os7vzwGgUnFspGmhdDizttJKDQF
      QltllJ/WCCRxEuFVY3q9BnGS0my4RHFCrjIupzMqFZt+v0aalOZ1nU6NH499oBwAaa4fsF05
      EQv1ene9Vqe7U97bttEK8nWLZ/se0jTotxym1w0Wyw2mF2BVMuKtTUNX+aWQFRnz4BzhPN5e
      hqnxOhuu/IRt3GW/X0Wa9+nodzudUprJLGXctx70hXo7AzK6Q4CYRvdWwLhM+/rm21satSDL
      FbNlztHY4WKWkWYK+x1CIssV02WZM/z0EfmdPL+doASm4bDaBBiGRbBN+O1vDvnnv96AtvD9
      mNX6gr/99Tv+/o9XDIYjEIpBu8Lk2KMzXnHLlsuG62BbmsnyDKOQ9FsN8lzj+xVa9f9PcofA
      5HqZ4kmPq/Mtvr/l+a8P+PeLH+h2Wgz6DV68PKVM59Qcn0w4OtyjYiraTUmzXuens0uk4YKW
      jIcDLqcLvEoNSyo67Q7zacjh/hihyn9C6oKup7CNj7i1KAHGXWhtlpmMek0sUfrLmsCTNvQb
      bebrhCKJ8AyLZrXKdvvpXmyfgzCOqDke0rJv6vY4Wi3IEpPVyqbfskGU0TGF0juGDSCNFe2q
      S0WaH9LF+iRE24K9nkAKg2FLkUYa5yYFVinN9XVOr27e0Z4fKKtdcxCq7JOtJqDBdS20Esxn
      Ps+O9mm3Kwy3vZJZEibDfg+hq6AVttDsdzSOLCcjKWz+Cz9S8YJLT9utAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
